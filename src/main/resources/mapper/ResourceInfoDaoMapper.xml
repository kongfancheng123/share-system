<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.share.system.data.dao.ResourceInfoDao">
    <resultMap id="BaseResultMap" type="com.share.system.data.entity.ResourceInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="resource_name" jdbcType="VARCHAR" property="resourceName"/>
        <result column="resource_desc" jdbcType="VARCHAR" property="resourceDesc"/>
        <result column="appointment_time" jdbcType="TIMESTAMP" property="appointmentTime"/>
        <result column="lease_time" jdbcType="TIMESTAMP" property="leaseTime"/>
        <result column="back_time" jdbcType="TIMESTAMP" property="backTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
    </resultMap>

    <insert id="insertResourceInfo" parameterType="com.share.system.data.entity.ResourceInfo">
         insert into ss_resource_info
        (
        resource_name,
        resource_desc,
        state
        )values
            (
            #{resourceInfo.resourceName},
            #{resourceInfo.resourceDesc},
            #{resourceInfo.state}
            )
    </insert>

    <delete id="deleteResourceInfo" parameterType="integer">
        delete from ss_resource_info
        where id=#{id}
    </delete>

    <select id="selectByResourceInfo" parameterType="com.share.system.data.entity.ResourceInfo"
            resultMap="BaseResultMap">
        select *
        from ss_resource_info
        where 1=1
        <if test="resourceInfo.id != null">
            and id = #{resourceInfo.id}
        </if>
        <if test="resourceInfo.resourceName != null">
            and resource_name = #{resourceInfo.resourceName}
        </if>
        <if test="resourceInfo.resourceDesc != null">
            and resource_desc = #{resourceInfo.resourceDesc}
        </if>
        <if test="resourceInfo.appointmentTime != null">
            and appointment_time = #{resourceInfo.appointmentTime}
        </if>
        <if test="resourceInfo.leaseTime != null">
            and lease_time = #{resourceInfo.leaseTime}
        </if>
        <if test="resourceInfo.backTime != null">
            and back_time = #{resourceInfo.backTime}
        </if>
        <if test="resourceInfo.state != null">
            and state = #{resourceInfo.state}
        </if>
        <if test="resourceInfo.userId != null">
            and user_id = #{resourceInfo.userId}
        </if>
        order by id
    </select>

    <update id="updateResourceInfo" parameterType="com.share.system.data.entity.ResourceInfo">
        UPDATE ss_resource_info
        <set>
            <if test="resourceInfo.resourceName != null">
                resource_name = #{resourceInfo.resourceName},
            </if>
            <if test="resourceInfo.resourceDesc != null">
                resource_desc = #{resourceInfo.resourceDesc},
            </if>
            <if test="resourceInfo.appointmentTime != null">
                appointment_time = #{resourceInfo.appointmentTime},
            </if>
            <if test="resourceInfo.leaseTime != null">
                lease_time = #{resourceInfo.leaseTime},
            </if>
            <if test="resourceInfo.backTime != null">
                back_time = #{resourceInfo.backTime},
            </if>
            <if test="resourceInfo.state != null">
                state = #{resourceInfo.state},
            </if>
            <if test="resourceInfo.userId != null">
                user_id = #{resourceInfo.userId},
            </if>
        </set>
        WHERE id=#{resourceInfo.id}

    </update>

    <select id="selectAll" resultMap="BaseResultMap">
        select * from ss_resource_info
        order by id
    </select>

    <select id="selectByid" resultMap="BaseResultMap">
        select * from ss_resource_info
        where id=#{id}
    </select>

    <select id="selectByLeaseTime"  parameterType="com.share.system.data.entity.TimeQuery"
            resultMap="BaseResultMap">
        select * from ss_resource_info
        where state=2
        <if test="timeQuery.startTime != null">
            and lease_time >= #{timeQuery.startTime}
        </if>
        <if test="timeQuery.endTime != null">
            and lease_time  &lt; #{timeQuery.endTime}
        </if>
    </select>

    <select id="selectByAppointmentTime"  parameterType="com.share.system.data.entity.TimeQuery"
            resultMap="BaseResultMap">
        select * from ss_resource_info
        where state=1
        <if test="timeQuery.startTime != null">
            and appointment_time >= #{timeQuery.startTime}
        </if>
        <if test="timeQuery.endTime != null">
            and appointment_time &lt;= #{timeQuery.endTime}
        </if>
    </select>

    <select id="selectByBackTime"  parameterType="com.share.system.data.entity.TimeQuery"
            resultMap="BaseResultMap">
        select * from ss_resource_info
        where state=3
        <if test="timeQuery.startTime != null">
            and back_time >= #{timeQuery.startTime}
        </if>
        <if test="timeQuery.endTime != null">
            and back_time &lt;= #{timeQuery.endTime}
        </if>
    </select>

    <update id="backResource" parameterType="com.share.system.data.entity.ResourceInfo">
        UPDATE ss_resource_info
        <set>
                resource_name = #{resourceInfo.resourceName},
                resource_desc = #{resourceInfo.resourceDesc},
                appointment_time = #{resourceInfo.appointmentTime},
                lease_time = #{resourceInfo.leaseTime},
                back_time = #{resourceInfo.backTime},
                state = #{resourceInfo.state},
                user_id = #{resourceInfo.userId},
        </set>
        WHERE id=#{resourceInfo.id}

    </update>

</mapper>